
- name: Setup | Create bin directory for {{ user_name }}
  file:
    path: "{{ yb_bin_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  tags: yb-prebuilt-ami

- set_fact:
    _mount_points: "{{ mount_points.split(',') }}"
  tags: always

- set_fact:
    mount_cores_dir: "{{ _mount_points[0] }}/cores"
  tags: always

- name: Configure | Add yb server ctl script
  vars:
    mount_paths: "{{ _mount_points | join(' ') }}"
  template:
    src: yb-server-ctl.sh.j2
    dest: "{{ yb_bin_dir }}/yb-server-ctl.sh"
    owner: "{{ user_name }}"
    mode: 0755

- name: Setup | Create directory to land core dumps
  file:
    path: "{{ mount_cores_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Setup | Symlink cores directory to {{ user_name }} home directory
  file:
    src: "{{ mount_cores_dir }}"
    dest: "{{ yb_cores_dir }}"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    state: link
    force: yes
  when: mount_cores_dir != yb_cores_dir
  tags: yb-prebuilt-ami

- name: Configure | Add clean cores script
  template:
    src: clean_cores.sh.j2
    dest: "{{ yb_bin_dir }}/clean_cores.sh"
    owner: "{{ user_name }}"
    mode: 0755
  tags: yb-prebuilt-ami

- name: Configure | Add purge logs script
  template:
    src: zip_purge_yb_logs.sh.j2
    dest: "{{ yb_bin_dir }}/zip_purge_yb_logs.sh"
    owner: "{{ user_name }}"
    mode: 0755
  tags: yb-prebuilt-ami

- name: Configure | Add collect metrics wrapper script
  template:
    src: collect_metrics_wrapper.sh.j2
    dest: "{{ yb_bin_dir }}/collect_metrics_wrapper.sh"
    owner: "{{ user_name }}"
    mode: 0755
  tags: yb-prebuilt-ami

- set_fact:
    cron_result: {}
  tags: yb-prebuilt-ami

- block:
  # Cronjob approach for logs and cores
  - name: Update mailto variable
    cronvar:
      name: MAILTO
      value: "\"\""
      user: "{{ user_name }}"

  - name: Setup cron to cleanup core files.
    cron:
      name: "cleanup core files every 5 minutes"
      minute: "*/5"
      user: "{{ user_name }}"
      job: "{{ yb_bin_dir }}/clean_cores.sh"
    register: cron_result
    failed_when:
      - cron_result is failed
      - cloud_type != "onprem"

  - name: Setup cron to cleanup log files.
    cron:
      name: "cleanup yb log files every 5 minutes"
      minute: "*/5"
      user: "{{ user_name }}"
      job: "{{ yb_bin_dir }}/zip_purge_yb_logs.sh"
    register: cron_result
    failed_when:
      - cron_result is failed
      - cloud_type != "onprem"

  - name: Setup cron to collect metrics.
    cron:
      name: "metric collection every minute"
      user: "{{ user_name }}"
      job: "{{ yb_bin_dir }}/collect_metrics_wrapper.sh"
    register: cron_result
    failed_when:
      - cron_result is failed
      - cloud_type != "onprem"

  when: not systemd_option
  tags:
    - yb-prebuilt-ami
    - install-software

- block:
  # Remove old cron jobs that clean cores, purge logs and collect metrics
  - name: Remove old cron job that cleans cores (for upgrades)
    cron:
      name: "cleanup core files every 5 minutes"
      user: "{{ user_name }}"
      state: absent

  - name: Remove old cron job that purges logs (for upgrades)
    cron:
      name: "cleanup yb log files every 5 minutes"
      user: "{{ user_name }}"
      state: absent

  - name: Remove old cron job that collects metrics (for upgrades)
    cron:
      name: "metric collection every minute"
      user: "{{ user_name }}"
      state: absent

  - name: Determine system or user scope
    stat:
      path: /etc/systemd/system/yb-zip_purge_yb_logs.service
    register: systemd_system

  - name: Systemd user units
    block:
    # Enable service files
    - name: Enable yb-zip_purge_yb_logs.service for purging logs
      systemd:
        name: yb-zip_purge_yb_logs
        scope: user
        enabled: yes
        daemon_reload: yes

    - name: Enable yb-clean_cores.service for cleaning cores
      systemd:
        name: yb-clean_cores
        scope: user
        enabled: yes

    - name: Enable yb-collect_metrics for collecting metrics
      systemd:
        name: yb-collect_metrics
        scope: user
        enabled: yes

    # Enable/Start timers
    - name: Enable yb-zip_purge_yb_logs.timer for purging logs
      systemd:
        name: yb-zip_purge_yb_logs.timer
        scope: user
        enabled: yes
        state: started

    - name: Enable yb-clean_cores.timer for cleaning cores
      systemd:
        name: yb-clean_cores.timer
        scope: user
        enabled: yes
        state: started

    - name: Enable yb-collect_metrics for collecting metrics
      systemd:
        name: yb-collect_metrics.timer
        scope: user
        enabled: yes
        state: started

    # Necessary for yb-master/tserver to be accessible. 'After' in service file.
    - name: Link network-online.target
      shell:
        cmd: "systemctl --user link /lib/systemd/system/network-online.target"

    - name: Start network-online.target
      systemd:
        name: network-online.target
        state: started
        enabled: yes
        scope: user
        daemon_reload: yes
    when: not systemd_system.stat.exists

  - name: Systemd system units
    block:
      # Daemon-reload for services
    - name: Perform daemon-reload for the new services
      shell:
        cmd: "sudo systemctl daemon-reload"

    # Enable service files
    - name: Enable yb-zip_purge_yb_logs.service for purging logs
      shell:
        cmd: "sudo systemctl enable yb-zip_purge_yb_logs"

    - name: Enable yb-clean_cores.service for cleaning cores
      shell:
        cmd: "sudo systemctl enable yb-clean_cores"

    - name: Enable yb-collect_metrics.service for collecting metrics
      shell:
        cmd: "sudo systemctl enable yb-collect_metrics"

    # Enable timers
    - name: Enable yb-zip_purge_yb_logs.timer for purging logs
      shell:
        cmd: "sudo systemctl enable yb-zip_purge_yb_logs.timer"

    - name: Enable yb-clean_cores.timer for cleaning cores
      shell:
        cmd: "sudo systemctl enable yb-clean_cores.timer"

    - name: Enable yb-collect_metrics.timer for collecting metrics
      shell:
        cmd: "sudo systemctl enable yb-collect_metrics.timer"

    # Starting timers
    - name: Run yb-zip_purge_yb_logs.sh (using timer) for purging logs
      shell:
        cmd: "sudo systemctl start yb-zip_purge_yb_logs.timer"

    - name: Run yb-clean_cores.sh (using timer) for cleaning cores
      shell:
        cmd: "sudo systemctl start yb-clean_cores.timer"

    - name: Run collect_metrics_wrapper.sh (using timer) for collecting metrics
      shell:
        cmd: "sudo systemctl start yb-collect_metrics.timer"
    when: systemd_system.stat.exists

  tags: systemd_upgrade
  when: systemd_option
