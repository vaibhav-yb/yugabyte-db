# Copyright 2019 YugaByte, Inc. and Contributors
#
# Licensed under the Polyform Free Trial License 1.0.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# https://github.com/YugaByte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt

- name: Perform command {{ command }} on YB {{ process }}
  hosts: "{{ instance_search_pattern }}"
  gather_facts: yes
  vars_files:
    - "{{ vars_file | default(placeholder_vars_file) }}"
  vars:
    script_to_run: "{{ yb_home_dir | default('/home/yugabyte') }}/bin/yb-server-ctl.sh"
    systemd_option: "{{ systemd_services | default(false) }}"
  tasks:
    - name: Call the ctl script with appropriate args
      shell: "{{ script_to_run }} {{ process }} {{ command }}"
      when: not systemd_option and process != "thirdparty" and process != "platform-services"

    - name: Control the master and tserver with systemd
      block:
        - name: Determine system or user scope
          stat:
            path: /etc/systemd/system/yb-master.service
          register: systemd_system

        - name: Systemd system scope
          block:
            - name: Reload daemon
              shell: "sudo systemctl daemon-reload"
            - name: Enable the {{ process }}
              shell: "sudo systemctl enable yb-{{ process }}"
              when: command == 'start'
            - name: Perform {{ command }} on the {{ process }}
              shell: "sudo systemctl {{ command }} yb-{{ process }}"
            - name: Disable the {{ process }}
              shell: "sudo systemctl disable yb-{{ process }}"
              when: command == 'stop'
            - name: Reload daemon
              shell: "sudo systemctl daemon-reload"
          when: systemd_system.stat.exists

        - name: Systemd user scope
          block:
          - name: Start the {{ process }}
            systemd:
              name: "yb-{{ process }}"
              state: started
              enabled: yes
              scope: user
              daemon_reload: yes
            when: command == 'start'
          - name: Stop the {{ process }}
            systemd:
              name: "yb-{{ process }}"
              state: stopped
              enabled: no
              scope: user
              daemon_reload: yes
            when: command == 'stop'
          when: not systemd_system.stat.exists
      when: systemd_option and process != "thirdparty" and process != "platform-services"


- name: Stopping thirdparty services
  hosts: "{{ instance_search_pattern }}"
  gather_facts: "{{ process == 'thirdparty' and command == 'stop-services'}}"
  vars_files:
    - "{{ vars_file | default(placeholder_vars_file) }}"
  tasks:
    - name: Stop node exporter service
      service:
        enabled: no
        name: node_exporter
        state: stopped
      become: yes
      become_method: sudo
      when: process == "thirdparty" and command == "stop-services"

- name: Stopping platform services
  hosts: "{{ instance_search_pattern }}"
  gather_facts: "{{ process == 'platform-services' and command == 'stop-services'}}"
  vars_files:
    - "{{ vars_file | default(placeholder_vars_file) }}"
  tasks:
    - block:
      - name: Determine system or user scope
        stat:
          path: "{{ yb_home_dir | default('/home/yugabyte') }}/.config/systemd/user/"
        become: yes
        become_method: sudo
        register: systemd_user

      - set_fact:
          systemd_dir: "/etc/systemd/system"
      - set_fact:
          systemd_dir: "{{ yb_home_dir | default('/home/yugabyte') }}/.config/systemd/user"
        when: systemd_user.stat.exists

      - name: Delete clean cores timer
        file:
          path: "{{ systemd_dir }}/yb-clean_cores.timer"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete clean cores service
        file:
          path: "{{ systemd_dir }}/yb-clean_cores.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete purge logs timer
        file:
          path: "{{ systemd_dir }}/yb-zip_purge_yb_logs.timer"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete purge logs service
        file:
          path: "{{ systemd_dir }}/yb-zip_purge_yb_logs.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete yb-bind check service
        file:
          path: "{{ systemd_dir }}/yb-bind_check.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete metrics collection timer
        file:
          path: "{{ systemd_dir }}/yb-collect_metrics.timer"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete metrics collection service
        file:
          path: "{{ systemd_dir }}/yb-collect_metrics.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete yb-master service
        file:
          path: "{{ systemd_dir }}/yb-master.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete yb-tserver service
        file:
          path: "{{ systemd_dir }}/yb-tserver.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Delete yb-controller service
        file:
          path: "{{ systemd_dir }}/yb-controller.service"
          state: absent
        become: yes
        become_method: sudo

      - name: Perform daemon-reload for removed services
        shell:
          cmd: "systemctl daemon-reload"
        become: yes
        become_method: sudo

      - name: Perform reset-failed for removed services
        shell:
          cmd: "systemctl reset-failed"
        become: yes
        become_method: sudo

      - name: Remove cron job that collects metrics
        cron:
          name: "metric collection every minute"
          user: "yugabyte"
          state: absent
        become: yes
        become_method: sudo

      - name: Remove old cron job that cleans cores
        cron:
          name: "cleanup core files every 5 minutes"
          user: "yugabyte"
          state: absent
        become: yes
        become_method: sudo

      - name: Remove old cron job that purges logs
        cron:
          name: "cleanup yb log files every 5 minutes"
          user: "yugabyte"
          state: absent
        become: yes
        become_method: sudo
      when: process == "platform-services" and command == "stop-services"
