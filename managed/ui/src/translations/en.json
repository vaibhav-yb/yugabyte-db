{
  "translation": {
    "common": {
      "beta": "Beta",
      "apply": "Apply",
      "applyChanges": "Apply Changes",
      "cancel": "Cancel",
      "confirm": "Confirm",
      "continue": "Continue",
      "create": "Create",
      "genericFailure": "Something went wrong. Please try again.",
      "no": "No",
      "proceed": "Proceed",
      "requiredField": "Required field",
      "save": "Save",
      "validateAndSave": "Validate and Save",
      "yes": "Yes",
      "close": "Close",
      "saving": "Saving",
      "select": "Select",
      "active": "Active",
      "none": "None",
      "edit": "Edit",
      "remove": "Remove",
      "wrong": "Something went wrong.",
      "areYouSure": "Are you sure ?",
      "delete": "Delete",
      "back": "Back",
      "selectAll": "Select All",
      "selected": "Selected",
      "note": "Note :",
      "reload": "Reload"
    },
    "task": {
      "viewDetails": "View Details"
    },
    "queryError": {
      "failedToFetchUniverselist": "Error fetching universe list."
    },
    "universeActions": {
      "encryptionAtRest": {
        "title": "Manage encryption at-Rest",
        "enableEAR": "Enable encryption at-Rest for this Universe",
        "kmsConfig": "Key management service config",
        "selectKMSConfig": "Select key management service config",
        "rotateKMSConfig": "Rotate key management service config",
        "universeKey": "Universe Key",
        "rotateUniverseKey": "Rotate Universe key",
        "rotateBothWarning": "Rotating Master key and Universe key should be performed at different times.",
        "earEnabledSuccess": "Encryption-at-rest is enabled successfully.",
        "earDisabedSuccess": "Encryption-at-rest is disabled.",
        "universeKeyRotationSuccess": "Successfully rotated universe key.",
        "masterKeyRotationSuccess": "Successfully rotated master key.",
        "lastRotatedLabel": "Last rotated: ",
        "lastActiveKMSLabel": "Last active KMS: "
      },
      "editYSQLSettings": {
        "modalTitle": "Edit YSQL configuration",
        "ysqlToggleLabel": "Enable YSQL for this Universe ",
        "authToggleLabel": "Enable YSQL Auth",
        "cannotEnableYSQL": "You cannot enable YSQL after universe creation",
        "currentPwdToAuth": "Enter current password to disable Auth",
        "YSQLPwdLabel": "YSQL Password",
        "rotatePwdLabel": "Rotate ysql password",
        "currentPwd": "Enter current password",
        "newPwd": "Enter new password",
        "reEnterNewPwd": "Re-enter new password",
        "updateSettingsSuccessMsg": "Updating YSQL configuration is in progress",
        "rotatePwdSuccessMsg": "DB credentials for YSQL updated successfully",
        "rotateBothYSQLWarning": "Rotating YSQL Password and Editing YSQL settings should be performed at different times.",
        "disableYSQLWarning1": "Are you sure you want to disable YSQL endpoint ?",
        "disableYSQLWarning2": "Once you perform this operation, You cannot enable it again."
      },
      "editYCQLSettings": {
        "modalTitle": "Edit YCQL configuration",
        "ycqlToggleLabel": "Enable YCQL for this Universe ",
        "authToggleLabel": "Enable YCQL Auth",
        "currentPwdToAuth": "Enter current password to disable Auth",
        "YCQLPwdLabel": "YCQL Password",
        "rotatePwdLabel": "Rotate ycql password",
        "currentPwd": "Enter current password",
        "newPwd": "Enter new password",
        "reEnterNewPwd": "Re-enter new password",
        "updateSettingsSuccessMsg": "Updating YCQL configuration is in progress",
        "rotatePwdSuccessMsg": "DB credentials for YCQL updated successfully",
        "rotateBothYCQLWarning": "Rotating YCQL Password and Editing YCQL settings should be performed at different times.",
        "overridePortsLabel": "Override YCQL Default Ports"
      },
      "encryptionInTransit": {
        "title": "Manage encryption in-Transit",
        "enableEIT": "Enable encryption in transit for this Universe",
        "certAuthority": "Certificate Authority",
        "serverCert": "Server Certificate",
        "useSameCert": "Use the same certificate for “Node to Node” and “Client to Node” encryption",
        "enableNNEncryption": "Enable “Node to Node” Encryption",
        "enableCNEncryption": "Enable “Client to Node” Encryption",
        "enableCNAndNNEncryption": "Enable “Node to Node” and “Client to Node” Encryption",
        "selectCA": "Select root certificate",
        "rotateCA": "Rotate root certificate",
        "useRollingUpgrade": "Use rolling upgrade to apply this change",
        "rollingUpgradeInputTitle": "Set the upgrade delay between servers (Seconds)",
        "rotateServerCert": "Rotate server certificate",
        "rotateNToNServerCert": "Rotate “Node to Node” Server Certificate",
        "rotateCToNServerCert": "Rotate “Client to Node” Server Certificate",
        "changeCTNCertWarning": "Note! Changing the client to node root certificate may cause the client to loose connection, please update the certificate used in your client application.",
        "disableEncryptionWarning": "Rotating certificates (Root Certificate or Server Certificate) and Enabling/Disabling encryption should be performed at different times.",
        "rootCAModifiedWarning": "You have selected a new Certificates Authority for Node to Node encryption. Rotating a Certificates Authority will automatically rotate its associated Server Certificate.",
        "clientRootCAModifiedWarning": "You have selected a new Certificates Authority for Client to Node encryption. Rotating a Certificates Authority will automatically rotate its associated Server Certificate.",
        "enableEITWarning": "Enable Node to Node encryption or Client to Node encryption to enable encryption in transit.",
        "disableEITWarning": "Note! Enabling/Disabling of “Encryption In Transit” or Enabling/Disabling of “Node to Node” or “Client to Node” encryption will be performed as non rolling upgrade."
      }
    },
    "commonErrors": {
      "pageNotExist": "Seems like this Page does not exist",
      "pageNotFound": "Page not found"
    },
    "config": {
      "security": {
        "encryptionAtRest": {
          "deleteKmsConfig": "Delete Configuration",
          "deleteConfigConfirmText": "Are you sure you want to delete <0>{{configName}}</0> configuration?",
          "deleteConfigWarning": "Before deleting this configuration make sure it's not being used by any backups. Note that in order to restore a backup with deleted KMS config <0></0> you'll need to create a new KMS config with the same master key details."
        }
      }
    },
    "universeForm": {
      "master": "Master",
      "tserver": "TServer",
      "configReadReplica": "Configure read replica",
      "createUniverse": "Create universe",
      "current": "Current :",
      "clearReadReplica": "Clear Read Replica",
      "editReadReplica": "Edit read replica",
      "editUniverse": "Edit universe",
      "new": "New :",
      "perInstance": "per instance",
      "perInstanceType": "type",
      "primaryTab": "1. Primary Cluster",
      "rrTab": "2. Read Replica",
      "actions": {
        "addRR": "Add Read Replica",
        "backPrimary": "Back to Primary Cluster",
        "configureRR": "Configure Read Replica",
        "deleteRR": "Delete this configuration"
      },
      "advancedConfig": {
        "accessKey": "Access Key",
        "dbVersion": "DB Version",
        "enableIPV6": "Enable IPV6",
        "enableIPV6Helper": "Use IPV6 networking for connections between the DB servers.",
        "enableSystemD": "Enable Systemd Services",
        "enableNetworkAccess": "Enable Public Network Access",
        "enableNetworkAccessHelper": "Assign a load balancer or nodeport for connecting to the DB endpoints over the internet.",
        "instanceProfileARN": "Instance Profile ARN",
        "masterHttpPort": "Master HTTP Port",
        "masterRpcPort": "Master RPC Port",
        "nodeExporterPort": "Node Exporter Port",
        "overridePorts": "Override Deployment Ports",
        "redisServerHttpPort": "Yedis HTTP Port",
        "redisServerRpcPort": "Yedis RPC Port",
        "title": "Advanced Configuration",
        "tserverHttpPort": "T-Server HTTP Port",
        "tserverRpcPort": "T-Server RPC Port",
        "ybcPackagePath": "YBC Package Path",
        "yqlServerHttpPort": "YCQL HTTP Port",
        "yqlServerRpcPort": "YCQL RPC Port",
        "ysqlServerHttpPort": "YSQL HTTP Port",
        "ysqlServerRpcPort": "YSQL RPC Port"
      },
      "cloudConfig": {
        "addZoneButton": "Add Zone",
        "autoPlacementField": "Auto Placement",
        "azHeader": "Availability Zones",
        "azNameLabel": "Name",
        "azNodesLabel": "Nodes",
        "azTServerNodesLabel": "TServer Nodes",
        "azPodsLabel": "Pods",
        "defaultRegion": "Default Region",
        "masterPlacement": "Master Placement",
        "mastersInDefaultRegion": "Masters in Default Region Only",
        "mastersInDefaultRegionHelper": "Forces placement of all masters in Default Region.",
        "nodePlacementTitle": "Node Placement",
        "placementStatus": {
          "azWarning": "Primary data placement is not geo-redundant, universe cannot survive even 1 availability zone failure",
          "multiRegion": "Primary data placement is fully geo-redundant, universe can survive at least 1 region failure ",
          "notEnoughNodes": "Not Enough Nodes",
          "notEnoughNodesConfigured": "Not Enough Nodes Configured",
          "noFieldsChanged": "At Least One Field Must Be Modified",
          "regionWarning": "Primary data placement is geo-redundant, universe can survive at least 1 availability zone failure",
          "singleRF": "Primary data placement is not redundant, universe cannot survive even 1 node failure"
        },
        "preferredAZLabel": "Preferred",
        "providerField": "Provider",
        "numReadReplicas": "Number of Read Replicas",
        "regionsField": "Regions",
        "replicationField": "Replication Factor",
        "maxRFvalue": "Maximum supported replication factor is {{rfValue}}",
        "minRFValue": "Minimum supported replication factor is {{rfValue}}",
        "title": "Cloud Configuration",
        "totalNodesField": "Total Nodes",
        "totalPodsField": "Total Pods",
        "universeName": "Name",
        "universeNameInUse": "Name already in use",
        "dedicatedModeHelper": "Place Masters on dedicated nodes",
        "colocatedModeHelper": "Place Masters on the same nodes as T-Servers",
        "masterNumNodesHelper": "Number of nodes dedicated to Masters is equal to the Universe’s replication factor and can not be modified.",
        "whenToUseDedicatedHelper": "When to use this setting?",
        "masterPlacementHelper": "Select this option if you plan to use this universe for multi-tenancy use cases -or- you expect to create Databases with a very large number of tables",
        "resetAZLabel": "Reset Config",
        "placeholder": {
          "enterUniverseName": "Enter Universe name",
          "selectProvider": "Select Provider",
          "selectRegions": "Select Regions"
        }
      },
      "deleteClusterModal": {
        "deleteRRMessage": "Are you sure you want to delete this read replica cluster ?",
        "enterUniverseName": "Enter universe name to confirm delete:",
        "forceDeleteCheckbox": "Ignore Errors and Force Delete",
        "modalTitle": "Delete Read Replica of {{universeName}}"
      },
      "gFlags": {
        "edit": "Edit",
        "preview": "Preview",
        "addFlag": "Add Flag",
        "addGflags": "Add Flags",
        "addJson": "Add as JSON",
        "addToTServer": "Add to T-Server",
        "addToMaster": "Add to Master",
        "addValue": "Add value",
        "editFlag": "Edit Flag",
        "editFlagValue": "Edit Flag Value",
        "flagName": "FLAG NAME",
        "flagNotBelongError": "This Flag does not belong to {{server}}. Remove Flag",
        "incorrectFlagName": "Incorrect flag name",
        "incorrectFlagValue": "Incorrect flag value",
        "incorrectFlagMsg": "Flag name is incorrect. Remove Flag",
        "masterValue": "MASTER VALUE",
        "JWKSModalTitle": "Paste the JSON web key set (JWKS):",
        "JWKSModalNote": "Note: You can obtain JWKS from JWKS URI that is part of OIDC discover end point",
        "JWKSModalPlaceholder": "e.g. eyJraWQiOiJQQWc0NjVINmxZMC1XR1JwUm1ZbEloeEpXb2s5OG10LVZLcXV3VzNPazg0IiwiYWxnIjoiUlMyNTYifQeyJzdWIiOiIw MHUyYXBxMWNtSFlaM092ZDVkNyIsIm5hbWUiOiJKaW4gWWFuIiwiZW1haWwiOiJqeWFuQHl1Z2FieXRlLmNvbSIsInZlciI6MSwiaXNzIjoi",
        "noFlags": "There are no flags assigned to this universe ",
        "removeFlag": "Remove Flag",
        "removeValue": "Remove Value",
        "selectedDBVersion": "Selected DB Version : ",
        "title": "G-Flags",
        "tServerValue": "T-SERVER VALUE",
        "addRow": "Add Row",
        "addKeyset": "Add JSON web key set(JWKS)",
        "inheritFlagsMsg": "Apply the same Flags to primary cluster and Read Replica.",
        "note": "Note! ",
        "rrWithOnlyTserver": "Read Replicas only have T-Servers",
        "primaryClusterFlags": "Primary Cluster Flags",
        "primaryTab": "Primary Cluster",
        "rrTab": "Read Replica",
        "gFlagUpdateOptions": "G-Flag Update Options",
        "rollingMsg": "Apply all changes using a rolling restart (slower, zero downtime)",
        "nonRollingMsg": "Apply all changes immediately, using a concurrent restart (faster, some downtime)",
        "nonRestart": "Apply all changes which do not require a restart immediately; ",
        "nonRestartRuntime": " apply remaining changes the next time the database is restarted",
        "delayBetweenServers": "Delay Between Servers :",
        "seconds": "seconds",
        "inheritRRModalBody": "Apply the same Flags to both Primary Cluster and Read replica? \n<br/> This will override all the Flags that are currently applied to Read replica <br/> by Primary Cluster’s Flag.",
        "inheritRRModalLine1": "Apply the same Flags to both Primary Cluster and Read replica?",
        "inheritRRModalLine2": "This will override all the Flags that are currently applied to Read replica",
        "inheritRRModalLine3": "by Primary Cluster’s Flag.",
        "inheritRRModalConfirmMsg": "Are you sure you want to continue with the changes?",
        "validationError": "Fix all the errors shown below to proceed",
        "hbaLDAPConfLocal": "local database user auth-method [auth-options]",
        "hbaLDAPConfHost": "host database user address auth-method [auth-options]",
        "hbaLDAPConfHostSSL": "hostssl database user IP-address auth-method [auth-options]",
        "invalidKey": "Invalid attribute key or missing '=' between key value pair",
        "uploadKeyset": "Need to upload JWKS keyset",
        "jwksNotSupported": "Please select database versions 2.18 or above to upload JWKS",
        "missingAttributeValue": "Missing value for the attribute key",
        "missingQuoteAttributeValue": "Missing quotes or having spaces within attribute values",
        "nonASCIIDetected": "Non-ASCII value detected",
        "identConfLocal": "map-name idp-user/group/role database-username",
        "hbaConfDescription": "Input each record as a new row, then reorder them. The sequential order of the records are significant as they are searched serially for every connection request.",
        "identConfDescriptionFirst": "The flag's configuration follows ",
        "identConfPostgreSQL": "PostgreSQL. ",
        "identConfDescriptionSecond": "Enter each mapping as a new row, comprising the map-name, external user name, and database user name. ",
        "identConfDescriptionMore": "To incorporate user name mappings from this flag, add them to the authentication methods that use external user names in hba_conf_csv file. ",
        "readMore": "Read More",
        "readLess": "Read Less",
        "flagsModifiedModalBody1": "The Gflags has been modified in another tab/browser/device.",
        "flagsModifiedModalBody2": "If you don't want to lose modified flags, please reload the page.",
        "flagsModifiedModalLine1": "Do you want to reload ?",
        "flagsModifiedModalLine2": "Note that current changes will be lost."
      },
      "helmOverrides": {
        "addK8sOverrides": "Add Kubernetes Overrides",
        "addAvailabilityZone": "Add Availability Zone",
        "availabilityZone": "Availability Zone",
        "azOverrides": "AZ Overrides",
        "forceApply": "Force Apply",
        "k8sOverrides": "Kubernetes Overrides",
        "title": "Helm Overrides",
        "universeOverrides": "Universe Overrides",
        "yamlErrorsTitle": "Errors in helm YAML"
      },
      "instanceConfig": {
        "assignPublicIP": "Assign Public IP",
        "assignPublicIPHelper": "Assign a public IP to the DB servers for connections over the internet.",
        "dedicatedNodes": "Use dedicated nodes for processes",
        "dedicatedNodesHelper": "Place tserver and master processes on separate nodes.",
        "ebs": "EBS Type",
        "ephemeralStorage": "! Selected instance type is with ephemeral storage, If you will pause this universe your data will get lost.",
        "instanceType": "Instance Type",
        "k8NumCores": "Number of Cores",
        "k8Memory": "Memory (Gib)",
        "useSpotInstance": "Use Spot Instances",
        "kmsConfig": "Key Management Service Config",
        "kmsConfigPlaceHolder": "Select Configuration",
        "provisionedIops": "Provisioned IOPS",
        "provisionedThroughput": "Provisioned Throughput",
        "ssd": "Storage Type (SSD)",
        "title": "Instance Configuration",
        "useTimeSync": "Use {{provider}} Time Sync",
        "useTimeSyncHelper": "Enable the {{provider}} Time Sync functionality for the DB servers.",
        "volumeInfo": "Volume Info",
        "volumeSizeUnit": "GB",
        "throughputUnit": "MB/s",
        "k8VolumeSizeUnit": "Gib"
      },
      "securityConfig": {
        "title": "Security Configurations",
        "authSettings": {
          "title": "Authentication Settings",
          "confirmPassword": "Confirm Password",
          "enableYsqlOrYcql": "Need to enable at least one endpoint among YSQL and YCQL",
          "enableYCQL": "Enable YCQL",
          "enableYCQLAuth": "Enable YCQL Auth",
          "enableYCQLAuthHelper": "Enable the YCQL password authentication.",
          "enableYCQLHelper": "Enable the YCQL API endpoint to run cassandra compatible workloads.",
          "enableYEDIS": "Enable YEDIS",
          "enableYEDISHelper": "Enable the YEDIS API endpoint to run REDIS compatible workloads.",
          "enableYSQL": "Enable YSQL",
          "enableYSQLAuth": "Enable YSQL Auth",
          "enableYSQLAuthHelper": "Enable the YSQL password authentication.",
          "enableYSQLHelper": "Enable the YSQL API endpoint to run postgres compatible workloads.",
          "ysqlAuthPassword": "YSQL Auth Password",
          "ycqlAuthPassword": "YCQL Auth Password"
        },
        "IPSettings": {
          "title": "IP Settings"
        },
        "encryptionSettings": {
          "title": "Encryption Settings",
          "encryptionInTransit": "Encryption in Transit",
          "encryptionAtRest": "Encryption at Rest",
          "enableClientToNodeTLS": "Enable Client-to-Node TLS",
          "enableClientToNodeTLSHelper": "Enable Client-to-Node encryption to use TLS enabled connection for communication between a client (ex: Database application, ysqlsh, ycqlsh) and the Universe YSQL -or- YCQL endpoint.",
          "enableEncryptionAtRest": "Enable Encryption at Rest",
          "enableEncryptionAtRestHelper": "Enable encryption for data stored on the tablet servers.",
          "enableNodeToNodeTLS": "Enable Node-to-Node TLS",
          "enableNodeToNodeTLSHelper": "Enable Node-to-Node encryption to use TLS enabled connections for communication between different Universe nodes.",
          "rootCertificate": "Root Certificate",
          "rootCertificatePlaceHolder": "Create New Certificate"
        },
        "placeholder": {
          "enterYSQLPassword": "Enter YSQL auth password",
          "confirmYSQLPassword": "Confirm YSQL auth password",
          "enterYCQLPassword": "Enter YCQL auth password",
          "confirmYCQLPassword": "Confirm YCQL auth password"
        }
      },
      "userTags": {
        "addRow": "Add Tag",
        "title": "User Tags",
        "tagName": "Tag Name",
        "tagValue": "Value"
      },
      "resizeNodeModal": {
        "confirmResizeCheckbox": "Confirm Resize Nodes",
        "modalTitle": "Resize Nodes",
        "cancelLabel": "Cancel",
        "confirmLabel": "Confirm",
        "modalDescription": "This operation will be performed without restart",
        "timeDelayLabel": "Rolling Upgrade Delay Between Servers (secs)"
      },
      "smartResizeModal": {
        "modalDescription": "This operation will migrate this universe and all its data to a completely new set of nodes Or alternatively you could try smart resize (This will change VM image {{value}} for existing nodes)",
        "buttonLabel": "Do Smart Resize"
      },
      "fullMoveModal": {
        "modalTitle": "Confirm Full Move Update",
        "submitLabel": "Do full move",
        "modalDescription": "This operation will migrate this universe and all its data to a completely new set of nodes.",
        "likeToProceed": "Would you like to proceed?"
      },
      "validation": {
        "confirmPassword": "Passwords should match",
        "fieldRequired": "This field is required",
        "passwordStrength": "Password must be 8 characters minimum and must contain at least 1 digit, 1 uppercase, 1 lowercase and one of the !@#$%^&* (special) characters.",
        "required": "{{field}} is required",
        "universeNameValidation": "{{cloudType}} Universe name cannot contain capital letters or special characters except dashes"
      }
    },
    "clusterDetail": {
      "performance": {
        "advisor": {
          "Recommendation": "Recommendation",
          "Separator": ": ",
          "NoPerformanceIssues": "Performance Advisor didn't find any performance issues",
          "FailedToLoad": "Failed to load. Try again later",
          "ReviewLoadBalancing": "If you are load balancing in your application or client, review your implementation.",
          "RebalanceAndTroubleshoot": "Rebalance and troubleshoot the cluster. ",
          "LearnPerformanceAdvisor": "Learn more about Performance Advisor",
          "LearnHow": "Learn How",
          "ScanCluster": "Scan the cluster for performance tuning recommendations",
          "RunWorkload": "For meaningful results, run your workload for at least 1 hour before doing a scan.",
          "IndexPerformanceTuning": "Learn more about index performance tuning",
          "OpenSupportTicket": "Open a support ticket",
          "DropIndex": "Connect to the database and use DROP INDEX to delete the unused indexes.",
          "RangeSharding": "Recreate the indexes using range sharding",
          "AllDatabases": "All Databases",
          "ScanBtn": "Scan",
          "ReScanBtn": "Re-Scan",
          "Hurray": "Hurray",
          "ScanTime": "Last Scanned",
          "DBScanFailed": "Failed to scan the database. Try again later."
        },
        "queryDetailsPanel": {
          "title": "Query Details",
          "label": {
            "responseTimePercentile": "Response Time Percentile",
            "details": "Details"
          },
          "aria": {
            "queryInfoPanelTabs": "Query information panel tabs"
          },
          "field": {
            "P25": "P25 Latency",
            "P50": "P50 Latency",
            "P90": "P90 Latency",
            "P95": "P95 Latency",
            "P99": "P99 Latency",
            "appName": "Client Name",
            "calls": "Total Count",
            "clientHost": "Client Host",
            "clientPort": "Client Port",
            "datname": "Database",
            "dbName": "Database",
            "elapsedMillis": "Elapsed Time",
            "keyspace": "Keyspace",
            "local_blks_hit": "Tmp tables RAM",
            "local_blks_written": "Tmp tables On Disk",
            "max_time": "Max Exec Time",
            "mean_time": "Avg Exec Time",
            "min_time": "Min Exec Time",
            "nodeName": "Node Name",
            "privateIp": "Private IP",
            "queryStartTime": "Query Start",
            "rolname": "User",
            "rows": "Rows",
            "sessionStatus": "Session Status",
            "stddev_time": "Stdev Exec Time",
            "total_time": "Total Time",
            "type": "Type"
          },
          "slowQueryGraph": {
            "title": "Query count by Response Time (ms)"
          }
        },
        "typeTag": {
          "IndexSuggestion": "INDEX SUGGESTION",
          "SchemaSuggestion": "SCHEMA SUGGESTION",
          "ConnectionSkew": "CONNECTION SKEW",
          "QueryLoadSkew": "QUERY LOAD SKEW",
          "CpuSkew": "CPU SKEW",
          "CpuUsage": "CPU USAGE",
          "HotShard": "HOT SHARD",
          "RejectedConnections": "REJECTED CONNECTIONS"
        },
        "suggestionTypes": {
          "All": "All Recommendation Types",
          "CpuSkew": "CPU Skew",
          "CpuUsage": "CPU Usage",
          "SchemaSuggestion": "Schema Suggestion",
          "ConnectionSkew": "Connection Skew",
          "QueryLoadSkew": "Query Load Skew",
          "IndexSuggestion": "Index Suggestion",
          "HotShard": "Hot Shard",
          "RejectedConnections": "Rejected Connections"
        },
        "chartTitle": {
          "CpuUsagePercentage": "CPU Usage (Percentage)",
          "HotShardCount": "Hot Shard Count",
          "Connections": "Connections",
          "Queries": "Queries"
        }
      },
      "disasterRecovery": {
        "heading": "Disaster Recovery",
        "actionButton": {
          "abortSwitchover": "Abort Switchover",
          "connectApplications": "Connect",
          "switchover": "Switchover",
          "repairDr": "Repair DR",
          "restartReplication": "Restart Replication",
          "viewTaskDetails": "View Details",
          "actionMenu": {
            "label": "Actions",
            "deleteConfig": "Remove disaster recovery",
            "editDrConfig": "Edit recovery configuration",
            "editDrConfigTarget": "Change DR Replica Universe",
            "editTables": "Select databases and tables",
            "switchover": "Switchover",
            "failover": "Failover",
            "advancedSubmenu": "Advanced",
            "restartReplication": "Restart replication",
            "dbSync": "Reconcile config with database"
          }
        },
        "error": {
          "failToFetchUniverse": "Error fetching details for the universe with the UUID: {{universeUuid}}",
          "failToFetchDrConfig": "Error fetching details for the DR config with the UUID: {{drConfigUuid}}"
        },
        "enableDrPrompt": {
          "featureDescription": "Enable <bold>Active-Active Single-Master Disaster Recovery</bold> (DR) for near-zero recovery point objective (RPO) & recovery time objective (RTO) in the event of a universe outage.",
          "actionButton": "Configure & Enable Disaster Recovery",
          "learnMore": "Learn more about <docsLink>DR.</docsLink>"
        },
        "banner": {
          "enablingDr": "<bold>Enabling disaster recovery...</bold> Universe operations are not available while the operation is in progress.",
          "failoverInProgress": "<bold>Failover in progress...</bold> Universe operations are not available while the operation is in progress.",
          "switchoverInProgress": "<bold>Switchover in progress...</bold> Universe operations are not available while the operation is in progress.",
          "connectYourApps": "<bold>Connect your applications</bold> to the new DR primary universe to direct read and writes to it.",
          "drConfigHalted": "<bold>Warning!</bold> DR replication stream has been manually halted. ",
          "drConfigRestartRequired": "<bold>Warning!</bold> DR replication failed which means the DR replica is severely out-of-sync with the DR primary. -- TODO: Text update."
        },
        "switchover": {
          "initiateModal": {
            "title": "Switchover",
            "titleTooltip": "<paragraph>Switch the DR primary with the DR replica after waiting for replication drain so there will be no data loss.</paragraph>Replication drain allows the replication on the DR replica to catch up with the DR primary and be fully synchronized before initiating switchover.",
            "instructions": "Wait for the standby cluster to be fully synchronized with the primary by <bold>draining replication</bold> before switchover.",
            "noDataLoss": "There will be <bold>no data loss</bold> in switchover.",
            "confirmationInstructions": "Enter DR Replica universe name to proceed.",
            "submitButton": "Initiate Switchover",
            "note": {
              "stopWorkload": "<bold>Stop application workloads</bold> before initiating switchover as all <bold>writes will be rejected</bold> during failover."
            },
            "error": {
              "taskFailure": "Switchover task failed.",
              "requestFailureLabel": "Switchover request failed"
            },
            "success": {
              "taskSuccess": "Switchover completed. <universeLink><bold>{{sourceUniverseName}}</bold></universeLink> is now your DR primary."
            }
          },
          "abortModal": {
            "title": "Abort Switchover",
            "description": "Aborting switchover will revert the DR configuration to it's pre-switchover state.",
            "submitButton": "Abort Failover",
            "error": {
              "requestFailureLabel": "Abort switchover request failed"
            },
            "success": {
              "requestSuccess": "Aborted switchover."
            }
          }
        },
        "failover": {
          "initiateModal": {
            "title": "Failover",
            "description": "Start failover immediately at the cost of <bold>losing some data</bold> that is not replicated to the DR replica.",
            "estimatedDataLoss": {
              "label": "Estimated Data Loss",
              "tooltip": "Data loss is estimated based on the internal clock skew on the standby cluster. **TODO: To review this text.",
              "rpoBenchmark": {
                "below": "{{ms}}ms lower than RPO",
                "above": "{{ms}}ms greater than RPO",
                "equal": "Data loss equal to RPO"
              },
              "none": "None"
            },
            "confirmationInstructions": "Enter DR Replica universe name to proceed.",
            "submitButton": "Initiate Failover",
            "error": {
              "taskFailure": "Failover task failed.",
              "requestFailureLabel": "Failover request failed"
            },
            "success": {
              "taskSuccess": "Failover completed. <universeLink><bold>{{sourceUniverseName}}</bold></universeLink> is now your DR primary."
            }
          }
        },
        "repairDrConfigModal": {
          "title": "Repair DR",
          "instructions": "Select repair type",
          "submitButton": "Initiate Repair",
          "option": {
            "useExistingTargetUniverse": {
              "optionName": "Reuse the current DR replica",
              "description": "Create a full copy of {{sourceUniverseName}} on <bold>{{targetUniverseName}}</bold> to bring it up to the same checkpoint as your DR primary to re-establish the replication stream and have a DR replica available for failover.",
              "backupStorageConfig": {
                "label": "Backup Storage Config",
                "tooltip": "<paragraph>Ensure that the backup storage config <bold>can be accessed from both source and target universe.</bold></paragraph><paragraph>Particularly, <bold>Network File System (NFS)</bold> based storage configs may not be accessible from universes in different regions.</paragraph>"
              }
            },
            "useNewTargetUniverse": {
              "optionName": "Select a new universe as DR replica",
              "drReplica": "DR Replica Universe"
            }
          },
          "error": {
            "fieldRequired": "Required",
            "repairTypeRequired": "Please select a repair type.",
            "restartTaskFailure": "Restart replication task failed.",
            "changeTargetTaskFailure": "Change DR replica task failed.",
            "restartRequestFailureLabel": "Restart replication request failed",
            "changeTargetRequestFailureLabel": "Change DR replica request failed"
          },
          "success": {
            "restartRequestSuccess": "Repairing DR configuration...",
            "restartTaskSuccess": "Repaired DR configuration.",
            "changeTargetRequestSuccess": "Repairing DR configuration...",
            "changeTargetTaskSuccess": "Repaired DR configuration."
          }
        },
        "config": {
          "aria": {
            "drConfigTabs": "DR Config Tabs"
          },
          "tab": {
            "metrics": "Metrics",
            "tables": "Tables"
          },
          "status": {
            "Initializing": "Initializing",
            "Replicating": "Replicating",
            "Switchover in Progress": "Switchover in Progress",
            "Failover in Progress": "Failover in Progress",
            "Halted": {
              "label": "Halted",
              "tooltip": "The DR replication was halted during the failover as the DR replica is not in sync with the DR primary anymore due to the data loss during failover."
            }
          },
          "sourceUniverseDrStatus": {
            "Unconfigured for DR": "Unconfigured",
            "Ready to replicate": "Ready to replicate",
            "Waiting for DR": "Waiting for DR",
            "Replicating data": "Replicating data",
            "Preparing for switchover": "Preparing for switchover",
            "Switching to DR replica": "Switching to DR replica",
            "Universe marked as DR failed": "Marked as DR failed",
            "undefined": "Undefined"
          },
          "targetUniverseDrStatus": {
            "Unconfigured for DR": "Unconfigured",
            "Bootstrapping": "Bootstrapping",
            "Receiving data, Ready for reads": "Receiving data, Ready for reads",
            "Switching to DR primary": "Switching to DR primary",
            "Universe marked as DR failed": "Marked as DR failed",
            "undefined": "Undefined"
          },
          "property": {
            "drStatus": {
              "label": "DR status",
              "tooltip": "Disaster Recovery (DR) utilizes asynchronous replication to ensure consistency between the primary and standby universe. An unhealthy stream means there is significant replication lag. **TODO: Needs to be updated."
            },
            "estimatedDataLoss": {
              "label": "Potential data loss on failover",
              "tooltip": "If you would like to failover, this is the potential data loss measured in time. This is estimated based on the clock skew of tablets on the standby universe. **TODO: Needs to be updated."
            }
          },
          "participant": {
            "drPrimary": "DR PRIMARY",
            "drReplica": "DR REPLICA"
          },
          "createModal": {
            "title": "Configure Active-Active Single-Master Disaster Recovery (DR)",
            "step": {
              "selectTargetUniverse": {
                "instruction": "1. Select a universe to use as the DR replica.",
                "submitButton": "Next: Select databases",
                "drReplica": "DR Replica Universe"
              },
              "selectDatabases": {
                "instruction": "2. Select the databases to enable disaster recovery for.",
                "submitButton": "Next: Configure boostrap",
                "databases": "Databases",
                "sizeGb": "Size (GB)",
                "ysqlDatabasesSelected": "YSQL: {{selectedDatabaseCount}} out of {totalDatabaseCount}} selected.",
                "pitrSetUpNote": "Note: Point-in-time Recovery will be enabled for the selected databases on the DR Replica."
              },
              "configureBootstrap": {
                "instruction": "3. Configure bootstrap.",
                "submitButton": "Next: Configure RPO",
                "backupStorageConfig": "Select the backup storage config to use for bootstrapping.",
                "parallelThreads": "Parallel threads",
                "bootstrapOffPeakNote": "Note: We recommend setting up Disaster Recovery during off-peak hours if bootstrap is required."
              },
              "configureRpo": {
                "instruction": "4. Configure RPO threshold to receive alerts.",
                "submitButton": "Set up and Enable Disaster Recovery",
                "rpo": "Recovery Point Objective (RPO)",
                "duration": {
                  "second": "Second",
                  "minute": "Minute",
                  "hour": "Hour"
                }
              }
            },
            "error": {
              "requestFailureLabel": "Create active-active single-master disaster recovery (DR) request failed",
              "taskFailure": "Failed to enable active-active single-master disaster recovery (DR)."
            },
            "success": {
              "requestSuccess": "Enabling active-active single-master disaster recovery (DR)...",
              "taskSuccess": "Active-active single-master disaster recovery (DR) is now enabled."
            }
          },
          "deleteModal": {
            "title": "Remove Active-Active Single-Master Disaster Recovery (DR): {{drConfigName}}",
            "submitButton": "Remove",
            "deleteConfirmation": "Are you sure you want to remove disaster recovery?",
            "deleteConsequence": "Your databases will no longer be replicated and there will be no DR replica universe to failover to in case of a disaster.",
            "confirmationInstructions": "Enter DR config name to proceed.",
            "error": {
              "requestFailureLabel": "Active-active single-master disaster recovery (DR) removal request failed",
              "taskFailure": "Active-active single-master disaster recovery (DR) removal task failed."
            },
            "success": {
              "requestSuccess": "Removing active-active single-master disaster recovery (DR)...",
              "taskSuccess": "Removed active-active single-master disaster recovery (DR)."
            }
          },
          "editModal": {
            "title": "Edit DR Configuration",
            "bootstrapConfiguration": "Bootstrap Configuration",
            "backupStorageConfig": {
              "label": "Backup Storage Config",
              "tooltip": "<paragraph>Ensure that the backup storage config <bold>can be accessed from both source and target universe.</bold></paragraph><paragraph>Particularly, <bold>Network File System (NFS)</bold> based storage configs may not be accessible from universes in different regions.</paragraph>"
            },
            "error": {
              "requestFailureLabel": "Edit DR configuration request failed",
              "taskFailure": "Edit DR configuration task failed.",
              "backupStorageConfigRequired": "Please select a backup storage config."
            },
            "success": {
              "requestSuccess": "Editing DR configuration...",
              "taskSuccess": "Edit DR configuration task succeeded."
            }
          },
          "editTargetModal": {
            "title": "Change DR Replica Universe",
            "step": {
              "selectTargetUniverse": {
                "drReplica": "DR Replica Universe",
                "nextButton": "Next: Configure bootstrap",
                "error": {
                  "targetUniverseRequired": "Required."
                }
              },
              "configureBootstrap": {
                "infoText": "Initial seeding is required when the database contains data. This involves a process called bootstrapping. Bootstrapping requires a backup storage config as an intermediate third party storage, and is <bold>time and resource intensive.</bold>",
                "backupStorageConfig": {
                  "label": "Backup Storage Config",
                  "tooltip": "<paragraph>Ensure that the backup storage config <bold>can be accessed from both source and target universe.</bold></paragraph><paragraph>Particularly, <bold>Network File System (NFS)</bold> based storage configs may not be accessible from universes in different regions.</paragraph>"
                },
                "error": {
                  "backupStorageConfigRequired": "Required."
                }
              }
            },
            "error": {
              "requestFailureLabel": "Change DR replica request failed",
              "taskFailure": "Change DR replica task failed."
            },
            "success": {
              "requestSuccess": "Changing DR replica...",
              "taskSuccess": "Change DR replica task succeeded."
            }
          },
          "editTablesModal": {
            "title": "Select Databases and tables",
            "instruction": "Select the databases to enable disaster recovery for",
            "step": {
              "selectTables": {
                "nextButton": "Next: Configure bootstrap",
                "error": {
                  "validationMinimumTableUuids": "Select at least one table to proceed."
                }
              },
              "configureBootstrap": {
                "infoText": "<paragraph>The selected databases and/or tables contain <bold>data that is not yet replicated</bold> for DR. To enable DR for these databases and/or tables, a bootstrap will be required before aynchronous replication from the DR primary universe to the DR replica universe can be established.</paragraph><paragraph>Are you sure you want to <bold>bootstrap</bold> and add these databases and/or tables?</paragraph>",
                "backupStorageConfig": {
                  "label": "Backup Storage Config",
                  "tooltip": "<paragraph>Ensure that the backup storage config <bold>can be accessed from both source and target universe.</bold></paragraph><paragraph>Particularly, <bold>Network File System (NFS)</bold> based storage configs may not be accessible from universes in different regions.</paragraph>"
                },
                "error": {
                  "backupStorageConfigRequired": "Required."
                }
              }
            },
            "submitButton": {
              "validate": "Validate Selection",
              "applyChanges": "Apply Changes"
            },
            "error": {
              "requestFailureLabel": "Edit tables request failed",
              "taskFailure": "Edit tables task failed.",
              "fetchSourceUniverseDetailsFailure": "Failed to fetch source universe details.",
              "undefinedXClusterTableType": "The tables in this config have unknown or mixed type.",
              "undefinedSourceUniverseUuid": "The xCluster config does not have an associated source universe.",
              "undefinedTargetUniverseUuid": "The xCluster config does not have an assoicated target universe."
            },
            "success": {
              "requestSuccess": "Updating tables under replication.",
              "taskSuccess": "Updated tables under replication."
            }
          }
        }
      },
      "xCluster": {
        "selectTable": {
          "error": {
            "failedToFetchIsBootstrapRequired": {
              "title": "Table bootstrap verification failed.",
              "body": "An error occured while verifying whether the selected tables require bootstrapping."
            },
            "validationMinimumTableUuids": {
              "title": "No tables selected.",
              "body": "Select at least 1 table to proceed"
            }
          },
          "warning": {
            "insufficientDiskSpace": {
              "title": "Insufficient disk space.",
              "body": "Some selected tables require bootstrapping. We recommend having at least {{bootstrapMinFreeDiskSpaceGb}} GB of free disk space in the source universe."
            }
          }
        },
        "error": {
          "undefinedXClusterTableType": "The tables in this config have unknown or mixed type.",
          "undefinedSourceUniverseUuid": "The xCluster config does not have an associated source universe.",
          "undefinedTargetUniverseUuid": "The xCluster config does not have an assoicated target universe.",
          "failedToFindSourceUniverse": "Unable to find a universe with the source universe UUID: {{universeUuid}}",
          "failedToFindTargetUniverse": "Unable to find a universe with the target universe UUID: {{universeUuid}}",
          "failedToFetchSourceUniverse": "Unable to fetch universe details for source universe UUID: {{universeUuid}}",
          "faliedToFetchTargetuniverse": "Unable to fetch universe details for target universe UUID: {{universeUuid}}",
          "failedToFetchCurrentSafetimes": "Unable to fetch current safetimes."
        },
        "syncDbModal": {
          "title": "Reconcile Config with Database",
          "syncConfirmation": "If out-of-band changes to an xCluster configuration have taken place (ex. changes using yb-admin), this action will allow YBA to update it's model of the xCluster config by pulling in those changes.",
          "submitButton": "Reconcile Config with Database",
          "error": {
            "taskFailure": "xCluster config DB sync task failed.",
            "undefinedTargetUniverseUuid": "The xCluster config does not have an assoicated target universe."
          },
          "success": {
            "taskSuccess": "Reconciled xCluster config with DB."
          }
        }
      },
      "taskList": {
        "taskHistory": {
          "title": "Task History"
        },
        "error": {
          "failedToFetchUniverseTaskList": "Unable to fetch universe task list."
        }
      }
    },
    "admin": {
      "advanced": {
        "globalConfig": {
          "GlobalConfigReqFailed": "Failed to fetch global config values",
          "GlobalConfigTitle": "Global Configuration",
          "CustomerConfigTitle": "Customer Configuration",
          "UniverseConfigTitle": "Universe Configuration",
          "ProviderConfigTitle": "Provider Configuration",
          "ModalKeyField": "Config Key",
          "ModalKeyValue": "Config Value",
          "ModelEditConfigTitle": "Edit Configuration",
          "ModelResetConfigTitle": "Reset Configuration",
          "ShowOverridenConfigs": "Show Overriden Configs",
          "EditConfigWarningMessage": "Value not changed",
          "SelectProvider": "Select Provider:",
          "SelectUniverse": "Select Universe:",
          "SelectCustomer": "Select Customer:",
          "UniverseConfigError": "There are no universes configured",
          "ProviderConfigError": "There are no providers configured",
          "CustomerConfigError": "There are no customers configured",
          "GenericConfigError": "Please try again",
          "BytesTooltipMessage": "<value><unit> where <unit> can be one of ['K', 'M'], Example: 10M",
          "DurationTooltipMessage": "<value> <unit> where <unit> can be one of ['minutes', 'hours', 'days', 'seconds'], Example: 10 minutes",
          "IntegerTooltipMessage": "Example: 30",
          "LongTooltipMessage": "Example: 716800",
          "StringTooltipMessage": "Example: total_time",
          "StringListTooltipMessage": "['foo', 'bar']"
        }
      }
    },
    "alertCustomTemplates": {
      "customVariables": {
        "addNewVariableText": "Create your own variables with <bold> customized value </bold> to use in the notification templates.",
        "createNewVariableButton": "Create Custom Variable",
        "customVariables": "Custom Variables",
        "systemVariables": "System Variables",
        "assignVariablesButton": "Assign Variable Value to Alert Policies",
        "customVariableContextMenu": {
          "editVariable": "Edit Variable",
          "variableDetails": "Variable Details",
          "deleteVariable": "Delete Variable"
        },
        "variableText": "Variable",
        "deleteSuccess": "Successfully deleted custom variable <u>{{variable_name}}</u>",
        "createSuccess": "Successfully created custom variable <u>{{variable_name}}</u>",
        "editSuccess": "Successfully edited custom variable <u>{{variable_name}}</u>",
        "createNewVariableModal": {
          "title": "Create Custom Variable",
          "editTitle": "Edit Custom Variable",
          "name": "Name",
          "values": "Values",
          "default": "Default",
          "addValuesButton": "Add Values",
          "valuesHelpText": "Define the possible values for the variable. Set one of the values as the <bold>default</bold> to use for all alerts that use the notification template. You can choose a value when configuring the alert policy.",
          "nameError": "Name should contain only alphanumeric and _(underscore)"
        },
        "assignCustomVariableValueModal": {
          "title": "Assign Variable Value to Alert Policies",
          "searchHelpText": "For each alert policy, choose the variable value to display in alert notifications.",
          "searchInputPlaceHolder": "Filter by alert policy name",
          "menuDefault": "(default)",
          "tablePolicyHeader": "Alert Policies"
        }
      },
      "composer": {
        "subject": "Subject",
        "content": "Content",
        "helpText": "All Alert Policies that generate {{type}} alerts will use this notification template.",
        "insertVariableButton": "Insert Variable",
        "previewTemplateButton": "Preview Notification Template",
        "templateSavedSuccess": "Template saved successfully",
        "emailTemplate": "Email Template",
        "webhookTemplate": "Webhook Template",
        "webhookComposer": {
          "rollback": "Rollback to Default Template",
          "clearTemplate": "Clear Template"
        },
        "invalidVariables": "Variables {{variable}} not found"
      },
      "customVariablesPlugin": {
        "sysOrCusVariable": "{{variable_type}} VAR",
        "alertValueNotFound": "No value found"
      },
      "alertVariablesPreviewModal": {
        "modalTitle": "Preview Notification Template",
        "info": "Choose the Alert Template to preview with the Email Notification Template.",
        "selectPlaceholder": "Select an alert configuration"
      },
      "rollbackModal": {
        "title": "Rollback to Default Template",
        "helpText": "Rollback to default template will discard your current edits and revert the template back to the out-of-box version. Do you want to proceed? "
      }
    },
    "alertPolicyDetails": {
      "variableTitle": "Custom variables used by the notification channels",
      "emptyVariableList": {
        "title": "No custom variables",
        "subText": "Custom variables are key-value pairs created in the <bold>Notification Channels / Customize Notification Templates</bold> page. You can use them to define custom values to show in alert notifications. "
      },
      "variablesList": {
        "helpText": "Choose the values to display in the actual alert notifications."
      },
      "variableName": "Variable Name:",
      "variableValUpdateSuccess": "variable updated successfully for policy \"{{policy_name}}\""
    },
    "nodeAgent": {
      "title": "Node Agents",
      "assignedNodesTitle": "Assigned Nodes",
      "unassignedNodesTitle": "Unassigned Nodes",
      "viewDetailsButton": "View Details",
      "unreachableInstanceAgents": "Instance agents are unreachable",
      "contactSupport": "Contact Support"
    },
    "OIDCJWT": {
      "emailId": "Email ID",
      "OIDCJWTToken": "JSON Web Token (JWT)",
      "errorMessage": "Oops, JWT Token has expired, please login via SSO",
      "redirectLinkText": "Back to home page",
      "expirationDate": "Token Expiration Date",
      "ysqlCommandLabel": "Use the following command to authenticate into your database using a JSON web token."
    },
    "universeSelector": {
      "all": "All Universes",
      "errorMessage": "Failed to fetch list of universes"
    },
    "providerSelector": {
      "all": "All Providers",
      "errorMessage": "Failed to fetch list of providers"
    },
    "storageConfig": {
      "pill": {
        "multiRegionSupport": "Multi-region support"
      }
    },
    "customCACerts": {
      "listing": {
        "header": "Trusted CA Certificates",
        "addCertButton": "Add Trusted CA Certificate",
        "caCertsListEmpty": "Upload CA certificates if your TLS connections use certificates issued by Certificate Authorities (CAs) not within the Trusted CA list.\nSuch as self-signed certificates or private third-party certificate authorities.",
        "table": {
          "name": "Certificate Name",
          "created": "Created",
          "validFrom": "Valid From",
          "validUntil": "Valid Until",
          "moreActions": {
            "download": "Download",
            "updateCert": "Update Certificate"
          }
        }
      },
      "uploadCACertModal": {
        "title": "Upload Trusted CA Certificate",
        "certNameTitle": "Name your CA Certificate",
        "save": "Save CA Certificate",
        "uploadBtnText": "Upload CA Certificate",
        "uploadBtnSubText": "Upload certificate from private third-party Certificate Authority (CA) or self-signed certificate.",
        "successMsg": "Certificate updated successfully"
      },
      "deleteCACertModal": {
        "title": "Delete CA Certificate",
        "info": "TLS connections using this CA Certificate will fail. Are you sure you want to delete your CA Certificate? ",
        "successMsg": "Certificate deleted successfully"
      }
    },
    "newRestoreModal": {
      "title": "Restore Backup",
      "restoreSuccess": "Success. Click <0>here</0> for task details",
      "allKeyspaces": "All Keyspaces",
      "preparingRestore": "Preparing Restore...",
      "waitingMsg": "This can take a few seconds",
      "backupInfoBanner": {
        "backupSource": "Backup source (universe name)",
        "createdAt": "Created at",
        "numberOfKeyspace": "Number of Keyspaces",
        "numberOfDatabase": "Number of Databases"
      },
      "prefetch": {
        "loadingText": "Fetching Incremental Backups..."
      },
      "generalSettings": {
        "restore": "Restore",
        "next": "Next",
        "verifying": "Verifying",
        "universeSelection": {
          "title": "Select target",
          "selectTargetUniverse": "Select target universe",
          "selectKMSConfig": "KMS Configuration",
          "kmsConfigHelpText": "<b>Note!</b> For a successful restore, the KMS configuration used for restore should be the same KMS configuration used during backup creation.",
          "validationMessages": {
            "ybcNotEnabled": "Cannot restore ybc backup to non-ybc universe",
            "kmsConfigRequired": "Backup was taken using KMS. Valid KMS configuration is needed for restoring."
          },
          "activeKMS": "Active",
          "usedDuringBackup": "Used during backup"
        },
        "selectKeyspaceForm": {
          "title": "Select Keyspace",
          "selectKeyspace": "Select the keyspace you want to restore",
          "optional": "(Optional)",
          "restoreKeyspace": "Rename keyspace/s before restoring {{Optional}}",
          "forceRenameHelpText": "<b>Note!</b> Renaming is required since the selected target universe contains keyspaces with identical names. You will be able to do this in the next step."
        },
        "tablesSelect": {
          "title": "Select tables",
          "selectAllTables": "Select all tables in this keyspace",
          "selectSubsetOfTables": "Select a subset of tables"
        },
        "parallelThreads": {
          "label": "Parallel threads (Optional)"
        }
      },
      "selectTables": {
        "title": "Select tables you want to restore",
        "searchTableName": "Search table name",
        "viewFilter": {
          "viewAll": "View All",
          "viewSelected": "View Selected"
        },
        "tablesCount": "{{count}} tables",
        "validationMessages": {
          "minimumTables": "Atleast one table should be selected"
        },
        "table": "Table"
      },
      "renameKeyspaces": {
        "title": "Rename keyspace/s before restoring  (Optional)",
        "currenyKeyspacename": "Current keyspace name",
        "assignNewName": "Assign new name",
        "addNewName": "Add new name",
        "validationMessages": {
          "keyspacesAlreadyExists": "Keyspace already exists in the target Universe",
          "duplicateKeyspaceName": "Duplicate keyspace name given",
          "invalidKeyspaceName": "Invalid keyspace name"
        },
        "keyspace": "Keyspace",
        "renamedTo": "Renamed To",
        "loadingMsg": "Fetching keyspaces from target universe..."
      },
      "stepper": {
        "generalSettings": "General Settings",
        "selectTables": "Select Tables",
        "renameKeyspaces": "Rename keyspace/s"
      },
      "tablespaces": {
        "checkboxTitle": "Restore tablespaces and data to their respective regions",
        "checkboxHelpText": "<b>Note!</b> If you don't select this option, or the target universe doesn't have a matching topology, all data will be restored to the primary region.",
        "unSupportedModal": {
          "title": "Unable to Restore Tablespaces",
          "warningText": "<b>Note!</b> You can proceed without restoring tablespaces, however none of the tablespaces are preserved and all their data is written to the primary region [location]. After the restore, you will have to re-add all the tablespaces. <a>Learn more</a>",
          "submitLabel": "Restore Without Tablespaces",
          "cancelLabel": "Cancel Restore",
          "subTitle": "Tablespaces that don't meet the requirements for the restore",
          "logs": "See the <a>logs</a> for more information.",
          "topologyMismatch": "Topology mismatch with the target Universe",
          "nameAlreadyExists": "Name already exists in the target universe",
          "tablespaceName": "Tablespace name"
        }
      }
    },
    "rbac": {
      "roles": {
        "create": {
          "title": "Add a role",
          "edit": "Edit a role",
          "form": {
            "name": "Name",
            "namePlaceholder": "Role Name",
            "description": "Description",
            "descriptionPlaceholder": "Role description",
            "selectPermissions": "Select Permissions",
            "selectPermissionSubText": "Select the permissions you want to include in this role.",
            "permissions": "Permissions",
            "editSelection": "Edit Permissions",
            "permissionsCount": "{{count}} Permissions",
            "validationMsg": {
              "nameRequired": "Name is required",
              "descRequired": "Description is required",
              "permRequired": "Atleast one permission must be selected",
              "invalidRoleName": "Role should not start or end with whitespace"
            }
          },
          "successMsg": "\"{{role_name}}\" role was created successfully",
          "editSuccessMsg": "\"{{role_name}}\" role was edited successfully"
        },
        "list": {
          "rowsCount": "{{count}} Roles",
          "createRole": "Create Role",
          "search": "Search by role name",
          "table": {
            "name": "Name",
            "description": "Description",
            "type": "Type",
            "users": "Users",
            "actions": "Actions",
            "moreActions": {
              "editRole": "Edit Role",
              "cloneRole": "Clone Role",
              "viewUsers": "View assigned users",
              "deleteRole": "Delete Role"
            }
          }
        },
        "delete": {
          "title": "Delete Role",
          "errMsg": "This operation will delete the following role:<br/><bold>“{{role_name}}”</bold><br/>Enter the role name to continue.",
          "successMsg": "\"{{role_name}}\" role was deleted successfully"
        },
        "edit": {
          "menu": {
            "configurations": "Configurations",
            "users": "Users"
          },
          "title": "Edit Role",
          "viewUsers": {
            "assignedUser": "Assigned users",
            "noUsersAssgined": "No users is assigned to this role"
          },
          "confirmModal": {
            "title": "Are you sure?",
            "errMsg": "Editing a role with assigned users can have major repercussions on user's ability to access resources.",
            "editRoleConfirm": "Are you sure you want to continue with the changes?"
          }
        }
      },
      "permissions": {
        "title": "User Roles",
        "connectOnly": "Users without a role are automatically assigned the '<b>Connect Only</b>' role, limiting access to login and view their profile page",
        "noUniverses": "There are no Universes deployed in this account. Selected roles will be applied to all future Universes by default. You can modify role's scope after deployment.",
        "role": "Role",
        "for": "for",
        "builtInRoleTab": "Built-in Role",
        "assignNewRole": "Assign new role",
        "customRoleTab": "Custom Role",
        "assignNewBuiltInRole": "Assign New Built-In Role",
        "assignNewCustomRole": "Assign New Custom Role",
        "userAssignedRole": "User’s assigned roles",
        "selectPermissionModal": {
          "title": "Select Permissions",
          "resourceManagement": "{{resource}} Management",
          "otherResource": "Other Resources",
          "selectAllOtherPermissions": "Select All Other Resource Permissions",
          "selectAllPermissions": "Select All {{resource}} Management Permissions",
          "selectionCount": "{{count}} / {{total}} Selected",
          "universePrimaryAndReplica": "(Primary Universe and Read Replica)",
          "universePrimaryAndReplica2": "Universes (Primary and Read)",
          "disabledDependentPerm": "This permission is included with a selected higher-level  permission and cannot be unselected"
        }
      },
      "users": {
        "create": {
          "title": "Add User",
          "form": {
            "email": "User Email",
            "emailPlaceholder": "Add email",
            "password": "Password",
            "confirmPassword": "Confirm Password",
            "successMsg": "\"{{user_email}}\" user created successfully",
            "validationMsg": {
              "emailRequired": "Email is required",
              "invalidEmail": "Invalid email",
              "passwordRequired": "Password is required",
              "confirmPasswordRequired": "Confirm Password is required",
              "confirmPasswordMatch": "Passwords should match"
            }
          }
        },
        "edit": {
          "title": "Edit User",
          "delete": "Delete User",
          "successMsg": "\"{{user_email}}\" user is edited successfully"
        },
        "delete": {
          "title": "Delete User",
          "errMsg": "This operation will delete the following user:<br/><bold>“{{user_email}}”</bold><br/>Enter the user email to continue.",
          "successMsg": "\"{{user_email}}\" user was deleted successfully"
        },
        "list": {
          "rowsCount": "{{count}} Users",
          "createUser": "Create User",
          "search": "Search by user email",
          "table": {
            "email": "User Email",
            "role": "Role",
            "moreRoles": "+ {{count}} More",
            "connectOnly": "Connect Only (Default)",
            "createdAt": "Created At",
            "actions": "Actions",
            "moreActions": {
              "editAssignedRoles": "Edit Assigned Roles",
              "deleteUser": "Delete User"
            }
          }
        },
        "validationMessages": {
          "roleRequired": "Roles should not be empty",
          "duplicateBuiltinRoles": "Duplicate built-in roles found",
          "duplicateCustomRoles": "Duplicate custom roles found"
        }
      },
      "policy": {
        "universeSelection": {
          "noRole": "Once you select the role, you can select the Universes here.",
          "noUniversePermInRole": "No universe permissions found",
          "editSelection": "Edit Selection",
          "allFutureUniverses": "All present and future Universes.",
          "universes": "Universes",
          "title": {
            "selectUniverse": "Select Universe",
            "editUniverse": "Edit universe"
          },
          "universeName": "Universe Name",
          "searchPlaceholder": "Search by universe name...",
          "includeFutureUniverse": "Include future Universes"
        }
      }
    },
    "restore": {
      "restoreDetails": {
        "title": "Restore Details",
        "sourceUniverse": "Backup source Universe",
        "targetUniverse": "Target Universe",
        "dataRestored": "Data Restored",
        "timeToRestore": "Time to Restore",
        "tableType": "Table Type",
        "backupDate": "Backup Created on",
        "restoreStatus": "Restore Status",
        "startTime": "Start Time",
        "endTime": "End time",
        "copyUUID": "Copy UUID",
        "database": "Database",
        "tables": "Tables",
        "copyBackupLocation": "Copy backup location",
        "copied": "Copied"
      }
    }
  }
}
