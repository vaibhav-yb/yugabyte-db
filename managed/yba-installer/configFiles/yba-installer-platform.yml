services:
  - name: platformConfig
    fileName: "{{ .ConfFileLocation }}"
    contents: |
      include classpath("application.common.conf")

      log.override.path="{{ installRoot }}/{{ yamlPath ".platform.logPath" }}"

      play.crypto.secret="{{ yamlPath ".platform.appSecret" }}"
      play.http.errorHandler = "com.yugabyte.yw.common.YWErrorHandler"
      play.server.https.keyStore.path = "{{ installRoot }}/yb-platform/certs/server.ks"
      play.server.https.keyStore.type = "JKS"
      play.server.https.keyStore.password = "{{ yamlPath ".platform.keyStorePassword" }}"

      play.i18n.langs = [ "en" ]
      pidfile.path = "/dev/null"
      db {
        default.url="jdbc:postgresql://127.0.0.1:{{ yamlPath ".platform.externalPort" }}/yugaware"
        default.driver=org.postgresql.Driver
        default.username="{{ yamlPath ".platform.platformDbUser" }}"
        default.password="{{ yamlPath ".platform.platformDbPassword" }}"
        default.logStatements=true
        default.migration.initOnMigrate=true
        default.migration.auto=true
      }
      ebean {
        default = ["com.yugabyte.yw.models.*"]
      }

      yb {
        devops.home = "{{ installRoot }}/yb-platform/devops"
        swamper.targetPath = "{{ installRoot }}/data/prometheus/swamper_targets"
        swamper.rulesPath = "{{ installRoot }}/data/prometheus/swamper_rules"
        metrics.url = "http://127.0.0.1:{{ yamlPath ".prometheus.externalPort" }}/api/v1"
        metrics.management.url = "http://127.0.0.1:{{ yamlPath ".prometheus.externalPort" }}/-"
        storage.path = "{{ installRoot }}/data/yb-platform"
        seedData = false
        multiTenant = false
        releases.path = "{{ installRoot }}/data/yb-platform/releases"
        thirdparty.packagePath = "{{ installVersionDir }}/third-party"
        # Interval at which to check the status of every universe. Default: 5 minutes.
        health.check_interval_ms = 300000
        # Interval at which to send a status report email. Default: 12 hours.
        health.status_interval_ms = 43200000
        # If SSO needs to be enabled on the platform.
        security.use_oauth = false
        security.use_oauth = "{{ yamlPath ".platform.useOauth" }}"
        security.type = ""
        # Override in case SECURITY_TYPE is set.
        security.type = "{{ yamlPath ".platform.ybSecurityType" }}"
        security.clientID = ""
        security.clientID = "{{ yamlPath ".platform.ybOidcClientId" }}"
        security.secret = ""
        security.secret = "{{ yamlPath ".platform.ybOidcSecret" }}"
        security.discoveryURI = ""
        security.discoveryURI = "{{ yamlPath ".platform.ybOidcDiscoveryUri" }}"
        security.oidcScope = ""
        security.oidcScope = "{{ yamlPath ".platform.ybOidcScope" }}"
        security.oidcEmailAttribute = ""
        security.oidcEmailAttribute = "{{ yamlPath ".platform.ybOidcEmailAttr" }}"
        taskGC.gc_check_interval = 1 day
        taskGC.task_retention_duration = 30 days
        # The IP of the platform.
        url = ""
        url = "{{ yamlPath ".platform.ywUrl" }}"
      }

      ybc {
        releases.path = "{{ installRoot }}/data/yb-platform/ybc/releases"
        docker.release = "{{ installRoot }}/data/yb-platform/ybc/release"
      }

      play.filters {
        # CSRF config
        csrf {
          cookie {
            # If non null, the CSRF token will be placed in a cookie with this name
            name = "csrfCookie"
            # Whether the cookie should be set to secure
            secure = false
            # Whether the cookie should have the HTTP only flag set
            httpOnly = false
          }
          # Whether to bypass CSRF check if CORS check is satisfied
          bypassCorsTrustedOrigins = false
          header {
            # The name of the header to accept CSRF tokens from.
            name = "Csrf-Token"
          }
        }
        cors {
          pathPrefixes = ["/"]
          allowedOrigins =  ["{{ yamlPath ".platform.corsOrigin" }}"]
          supportsCredentials=true
          allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
          allowedHttpHeaders = [
            "Accept",
            "Origin",
            "Content-Type",
            "X-Auth-Token",
            "X-AUTH-YW-API-TOKEN",
            ${play.filters.csrf.header.name}
          ]
        }
      }
  - name: platformService
    fileName: "{{ .SystemdFileLocation }}"
    contents: |
      [Unit]
      Description=Yugabyte Platform
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=yugabyte
      Group=yugabyte
      Type=simple

      Environment="JAVA_HOME={{ installVersionDir }}/jdk8u345-b01"

      ExecStart={{ installRoot }}/yb-platform/yugaware/bin/yugaware \
        -Dconfig.file={{ .ConfFileLocation }} \
        -Dhttp.port=disabled \
        -Dhttps.port={{ yamlPath ".platform.containerExposedPort" }}

      Restart=always
      RestartSec={{ yamlPath ".platform.restartSeconds"}}

      [Install]
      WantedBy=multi-user.target
