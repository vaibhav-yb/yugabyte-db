--
-- REPLICATION SLOT
--
CREATE ROLE regress_replicationslot_user LOGIN SUPERUSER;
CREATE ROLE regress_replicationslot_replication_user WITH REPLICATION;
CREATE ROLE regress_replicationslot_dummy;
SET SESSION AUTHORIZATION 'regress_replicationslot_user';
SELECT * FROM pg_create_logical_replication_slot('testslot1', 'yboutput', false);
 slot_name | lsn
-----------+-----
 testslot1 |
(1 row)

SELECT * FROM pg_create_logical_replication_slot('testslot2', 'yboutput', false);
 slot_name | lsn
-----------+-----
 testslot2 |
(1 row)

-- Cannot do SELECT * since yb_stream_id changes across runs.
SELECT slot_name, plugin, slot_type, datoid, database, temporary, active,
    active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn
FROM pg_replication_slots;
 slot_name |  plugin  | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn
-----------+----------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------
 testslot2 | yboutput | logical   |  13301 | yugabyte | f         | f      |            |      |              |             |                     
 testslot1 | yboutput | logical   |  13301 | yugabyte | f         | f      |            |      |              |             |                     
(2 rows)

-- drop the replication slot and create with same name again.
SELECT * FROM pg_drop_replication_slot('testslot1');
 pg_drop_replication_slot
--------------------------

(1 row)

-- TODO(#19263): Change the slot to temporary once supported.
SELECT * FROM pg_create_logical_replication_slot('testslot1', 'yboutput', false);
 slot_name | lsn
-----------+-----
 testslot1 |
(1 row)

-- unsupported cases
SELECT * FROM pg_create_logical_replication_slot('testslot_unsupported_plugin', 'unsupported_plugin', false);
ERROR:  invalid output plugin
DETAIL:  Only 'yboutput' plugin is supported
SELECT * FROM pg_create_logical_replication_slot('testslot_unsupported_temporary', 'yboutput', true);
ERROR:  Temporary replication slot is not yet supported
HINT:  See https://github.com/yugabyte/yugabyte-db/issues/19263. React with thumbs up to raise its priority
SELECT * FROM pg_create_physical_replication_slot('testslot_unsupported_physical', true, false);
ERROR:  YSQL only supports logical replication slots
-- creating replication slot with same name fails.
SELECT * FROM pg_create_logical_replication_slot('testslot1', 'yboutput', false);
ERROR:  replication slot "testslot1" already exists
-- success since user has 'replication' role
SET ROLE regress_replicationslot_replication_user;
SELECT * FROM pg_create_logical_replication_slot('testslot3', 'yboutput', false);
 slot_name | lsn
-----------+-----
 testslot3 |
(1 row)

RESET ROLE;
-- fail - must have replication or superuser role
SET ROLE regress_replicationslot_dummy;
SELECT * FROM pg_create_logical_replication_slot('testslot4', 'yboutput', false);
ERROR:  must be superuser or replication role to use replication slots
RESET ROLE;
-- drop replication slots
SELECT * FROM pg_drop_replication_slot('testslot1');
 pg_drop_replication_slot
--------------------------

(1 row)

SELECT * FROM pg_drop_replication_slot('testslot2');
 pg_drop_replication_slot
--------------------------

(1 row)

SELECT * FROM pg_drop_replication_slot('testslot3');
 pg_drop_replication_slot
--------------------------

(1 row)

SELECT slot_name, plugin, slot_type, datoid, database, temporary, active,
    active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn
FROM pg_replication_slots;
 slot_name | plugin | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn
-----------+--------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------
(0 rows)

-- drop non-existent replication slot
SELECT * FROM pg_drop_replication_slot('testslot_nonexistent');
ERROR:  replication slot "testslot_nonexistent" does not exist
RESET SESSION AUTHORIZATION;
DROP ROLE regress_replicationslot_user;
DROP ROLE regress_replicationslot_replication_user;
DROP ROLE regress_replicationslot_dummy;